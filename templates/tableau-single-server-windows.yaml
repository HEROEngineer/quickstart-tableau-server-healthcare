---
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for TSM-based Tableau Server on Windows
Parameters:
  InstanceType:
    AllowedValues:
    - c5.4xlarge
    - c5d.4xlarge
    - c4.4xlarge
    - m4.4xlarge
    - m5.4xlarge
    - r5d.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m5.4xlarge
    Description: Amazon EC2 instance type
    Type: String
  KeyPairName:
    ConstraintDescription: The name of an existing EC2 KeyPair.
    Description: Public/private key pairs allow you to securely connect to your instance
      after it launches
    Type: AWS::EC2::KeyPair::KeyName
  SourceCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR address from which you will connect to the instance
    Type: String
  TSMAdminCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR address from which you will connect to the TSM Web UI
    Type: String
  RDPAdminCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR address from which you will remote  into the instance
    Type: String
  Username:
    Description: Tableau Services Manager (TSM) administrator username (cannot be
      Administrator)
    Type: String
    AllowedPattern: "[A-Za-z0-9]+"
    MaxLength: '30'
  Password:
    Description: Tableau Services Manager (TSM) administrator password
    Type: String
    NoEcho: 'true'
    AllowedPattern: "^(?=[a-zA-Z0-9#@$?!]{8,}$)(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9]).*"
    MinLength: '8'
  TableauServerAdminUser:
    Description: The name of the initial administrator for Tableau Server
    Type: String
    MinLength: '1'
  TableauServerAdminPassword:
    Description: The password of the initial administrator for Tableau Server
    Type: String
    MinLength: '1'
    NoEcho: 'true'
  TableauServerLicenseKey:
    Description: License Key (leave blank for trial)
    Type: String
  AcceptEULA:
    AllowedPattern: 'Yes'
    AllowedValues:
    - 'Yes'
    - 'No'
    Description: 'View the EULA at the Link: https://www.tableau.com/eula'
    Type: String
  RegFirstName:
    Description: First Name
    Type: String
    MinLength: '1'
  RegLastName:
    Description: Last Name
    Type: String
    MinLength: '1'
  RegEmail:
    Description: Email
    Type: String
    MinLength: '1'
  RegCompany:
    Description: Company
    Type: String
    MinLength: '1'
  RegTitle:
    Description: Title
    Type: String
    MinLength: '1'
  RegDepartment:
    Description: Department
    Type: String
    MinLength: '1'
  RegIndustry:
    Description: Industry
    Type: String
    MinLength: '1'
  RegPhone:
    Description: Phone
    Type: String
    MinLength: '1'
  RegCity:
    Description: City
    Type: String
    MinLength: '1'
  RegState:
    Description: State
    Type: String
    MinLength: '1'
  RegZip:
    Description: ZIP/Postal Code
    Type: String
    MinLength: '1'
  RegCountry:
    Description: Country
    Type: String
    MinLength: '1'
  ExistingSecurityGroup:
    Description: Provide an existing security group or leave blank for creating a
      new one
    Type: String
  IPAddress:
    Description: Provide an EIP for the node (blank = no EIP)
    Type: String
  ImageId:
    Description: Amazon Machine Image Id
    Type: AWS::EC2::Image:Id
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS Environment and Machine Configuration
      Parameters:
      - InstanceType
      - ImageId
      - KeyPairName
      - ExistingSecurityGroup
      - IPAddress
    - Label:
        default: Secrets
      Parameters:
      - Username
      - Password
      - TableauServerAdminUser
      - TableauServerAdminPassword
    - Label:
        default: Registration
      Parameters:
      - TableauServerLicenseKey
      - RegFirstName
      - RegLastName
      - RegEmail
      - RegCompany
      - RegTitle
      - RegDepartment
      - RegIndustry
      - RegPhone
      - RegCity
      - RegState
      - RegZip
      - RegCountry
    ParameterLabels:
      InstanceType:
        default: Tableau Amazon EC2 instance type
      KeyPairName:
        default: Key Pair Name
      InstanceSecurityGroup:
        default: Instance Security Group
      IPAddress:
        default: EIP address for the node
      Username:
        default: Tableau Services Manager (TSM) administrator username
      Password:
        default: Tableau Services Manager (TSM) administrator password
      TableauServerAdminUser:
        default: Tableau Server administrator username
      TableauServerAdminPassword:
        default: Tableau Server administrator password
      TableauServerLicenseKey:
        default: Tableau Activation Key
      AcceptEULA:
        default: Accept Tableau End User License Agreement
      ImageId:
        default: Amazon Machine Image ID
      RegFirstName:
        default: First Name
      RegLastName:
        default: Last name
      RegEmail:
        default: Email Address
      RegCompany:
        default: Company
      RegTitle:
        default: Title
      RegDepartment:
        default: Department
      RegIndustry:
        default: Industry
      RegPhone:
        default: Phone
      RegCity:
        default: City
      RegState:
        default: State
      RegZip:
        default: Zip/Postal Code
      RegCountry:
        default: Country
      SSLCertificateArn:
        default: ACM Certificate ARN
Mappings:
  DefaultConfiguration:
    InstallationConfig:
      InstallationBucket: testingtsmtableau
      InstallationExecutable: Tableau-Server-2018.2-Beta2-x64.exe
    MachineConfiguration:
      SystemVolumeSize: 50
      DataVolumeSize: 100
      WindowsVersion: WS2012R2

Conditions:
  IsTrial: !Equals [ '', !Ref TableauServerLicenseKey ]
  NoElasticIP: !Equals [ '', !Ref IPAddress ]
  HasElasticIP: !Not [ Condition: NoElasticIP ]

Resources:
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Condition: HasElasticIP
    DependsOn: TableauWindowsServer
    Properties:
      InstanceId: !Ref TableauWindowsServer
      EIP: !Ref IPAddress
  TableauWindowsServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            c:\tabsetup\secrets.json:
              content:
                local_admin_user: !Ref Username
                local_admin_pass: !Ref Password
                content_admin_user: !Ref TableauServerAdminUser
                content_admin_pass: !Ref TableauServerAdminPassword
                product_keys: 
                - !If [ IsTrial, trial, !Ref TableauServerLicenseKey ]
            c:\tabsetup\registration.json:
              content:
                first_name: !Ref RegFirstName
                last_name: !Ref RegLastName
                email: !Ref RegEmail
                company: !Sub ${RegCompany};AWSQuickStart-WinBeta
                title: !Ref RegTitle
                department: !Ref RegDepartment
                industry: !Ref RegIndustry
                phone: !Ref RegPhone
                city: !Ref RegCity
                state: !Ref RegState
                zip: !Ref RegZip
                country: !Ref RegCountry
            c:\tabsetup\SilentInstaller.py:
              source:
                Fn::Join:
                - ''
                - - https://
                  - Fn::FindInMap:
                    - DefaultConfiguration
                    - InstallationConfig
                    - InstallationBucket
                  - ".s3-us-west-2.amazonaws.com/SilentInstaller.py"
            c:\tabsetup\config.json:
              content:
                configEntities:
                  identityStore:
                    _type: identityStoreType
                    type: local
                topologyVersion: {}
            c:\tabsetup\python-3.6.4-amd64.exe:
              source: https://www.python.org/ftp/python/3.6.4/python-3.6.4-amd64.exe
            c:\tabsetup\tableau-server-webapp-installer.exe:
              source:
                Fn::Join:
                - ''
                - - https://
                  - Fn::FindInMap:
                    - DefaultConfiguration
                    - InstallationConfig
                    - InstallationBucket
                  - ".s3-us-west-2.amazonaws.com/"
                  - Fn::FindInMap:
                    - DefaultConfiguration
                    - InstallationConfig
                    - InstallationExecutable
          commands:
            1-install-python:
              command: c:\tabsetup\python-3.6.4-amd64.exe /quiet InstallAllUsers=1
                PrependPath=1
              cwd: c:\tabsetup
              waitAfterCompletion: 0
            2-create-user:
              command: !Sub net user ${Username} ${Password} /add /y
              cwd: c:\tabsetup
              waitAfterCompletion: 0
            3-add-admin:
              command: !Sub net localgroup Administrators ${Username} /add /y
              cwd: c:\tabsetup
              waitAfterCompletion: 0
            4-run-installer:
              cwd: c:\tabsetup
              command: "C:\Program Files\Python36\python.exe" SilentInstaller.py install --secretsFile c:\\tabsetup\\secrets.json --registrationFile c:\\tabsetup\\registration.json --configFile c:\\tabsetup\\config.json --installDir d:\\tableau c:\tabsetup\tableau-server-webapp-installer.exe > c:\\tabsetup\\tsm_installer-output.txt 2>&1
              waitAfterCompletion: 0
            5-cleanup-secrets:
              cwd: c:\tabsetup
              command: del c:\tabsetup\secrets.json
              waitAfterCompletion: 0
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          Encrypted: true
          VolumeSize: !FindInMap [ DefaultConfiguration, MachineConfiguration, SystemVolumeSize ]
          VolumeType: gp2
      - DeviceName: xvdc
        Ebs:
          Encrypted: true
          VolumeSize: !FindInMap [ DefaultConfiguration, MachineConfiguration, DataVolumeSize ]
          VolumeType: gp2
      SecurityGroups: !Ref InstanceSecurityGroup
      KeyName: !Ref KeyPairName
      UserData:
        Fn::Base64:
          Fn::Join: !Sub 
          - |
            <script>
            cfn-init.exe -v -s ${AWS::StackId} -r TableauWindowsServer --region ${AWS::Region}
            cfn-signal.exe -e %errorlevel% ${WHUrl}
            </script>
          - WHUrl:
              Fn::Base64: !Ref TableauServerWaitHandle
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-cfn-tableau-server"
  TableauServerWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  TableauServerWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle: !Ref TableauServerWaitHandle
      Timeout: 3600
Outputs:
  InstanceID:
    Description: EC2 InstanceID of the instance running Tableau Server
    Value: !Ref TableauWindowsServer
  PublicIPAddress:
    Description: Public IP Address of instance running Tableau Server
    Value: !GetAtt TableauWindowsServer.PublicIp
  TableauServicesManagerURL:
    Description: URL for the TSM Web UI
    Value: !Sub http://${TableauServer.PublicIp}:8850/
  TableauServerURL:
    Description: Public DNS name of instance running Tableau Server
    Value: !Sub !Sub http://${TableauServer.PublicDnsName}

