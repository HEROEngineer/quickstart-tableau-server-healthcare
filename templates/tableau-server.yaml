AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS CloudFormation Template: Deploys infrastructure for Tableau Server. (qs-1oui27s1g)"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Environment and Machine Configuration
        Parameters:
        - AMIOS
        - BastionSecurityGroup
        - InstanceType
        - KeyPairName
        - PublicSubnetIds
        - PrivateSubnetIds
        - SourceCIDR
        - VpcCidr
        - VpcId
        - ConfigRecorder
        - ConfigDeliveryChannel
      - Label:
          default: Server DNS configuration
        Parameters:
        - AWSHostedZoneID
        - AWSPublicFQDN
        - SSLCertificateARN
      - Label:
          default: Secrets
        Parameters:
        - Username
        - Password
        - TableauServerAdminUser
        - TableauServerAdminPassword
      - Label:
          default: Registration
        Parameters:
        - AcceptEULA
        - TableauServerLicenseKey
        - RegFirstName
        - RegLastName
        - RegEmail
        - RegCompany
        - RegTitle
        - RegDepartment
        - RegIndustry
        - RegPhone
        - RegCity
        - RegState
        - RegZip
        - RegCountry
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
        - QSS3BucketName
        - QSS3KeyPrefix
        - QSTagKey
        - QSTagValue
    ParameterLabels:
      AMIOS:
        default: AMI Operating System
      AWSHostedZoneID:
        default: DNS Zone ID
      AWSPublicFQDN:
        default: Full DNS Name for Tableau Server
      AcceptEULA:
        default: Accept Tableau End User License Agreement
      BastionSecurityGroup:
        default: Bastion Host Security Group ID
      ConfigRecorder:
        default: AWS Config Recorder ARN
      ConfigDeliveryChannel:
        default: AWS Config Delivery Channel ARN
      InstanceType:
        default: Tableau Server instance type
      KeyPairName:
        default: Key Pair Name
      Password:
        default: Tableau Services Manager (TSM) administrator password
      PublicSubnetIds:
        default: Public Subnet IDs in your VPC
      PrivateSubnetIds:
        default: Private Subnet IDs in your VPC
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      QSTagKey:
        default: Quick Start Tag key
      QSTagValue:
        default: Quick Start Tag value
      RegCity:
        default: City
      RegCompany:
        default: Company
      RegCountry:
        default: Country
      RegDepartment:
        default: Department
      RegEmail:
        default: Email Address
      RegFirstName:
        default: First Name
      RegIndustry:
        default: Industry
      RegLastName:
        default: Last Name
      RegPhone:
        default: Phone
      RegState:
        default: State
      RegTitle:
        default: Title
      RegZip:
        default: Zip/Postal Code
      SourceCIDR:
        default: Source CIDR for Access
      SSLCertificateARN:
        default: SSL Certificate ARN (Requires matching DNS name)
      TableauServerAdminPassword:
        default: Tableau Server administrator password
      TableauServerAdminUser:
        default: Tableau Server administrator username
      TableauServerLicenseKey:
        default: Tableau Activation Key
      Username:
        default: Tableau Services Manager (TSM) administrator username
      VpcCidr:
        default: VPC CIDR Block
      VpcId:
        default: VPC ID

Parameters:
  AMIOS:
    AllowedValues:
      - Amazon-Linux-2
      - CentOS-7-HVM
      - Ubuntu-Server-16.04-LTS-HVM
      - Windows-Server-2012-R2
    Description: The operating system (Microsoft Windows Server, CentOS, Ubuntu Server, or Amazon Linux 2) on the EC2 instance where Tableau Server will be installed. If you choose CentOS, make sure that you have a subscription to the CentOS AMI in AWS Marketplace
    Default: Amazon-Linux-2
    Type: String
  AWSHostedZoneID:
    Description: DNS Zone ID to contain the server's DNS entry.
    Type: String
  AWSPublicFQDN:
    Description: Tableau Server portal will be reachable at this address.
    Type: String
  AcceptEULA:
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'
    Description: 'View the EULA at the Link: https://www.tableau.com/eula'
    Type: String
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: EC2 Security Group for the bastion host.
  ConfigRecorder:
    Type: String
    Default: ""
    Description: Config Recorder in your AWS Region. Leaving empty will try to create a new recorder.
  ConfigDeliveryChannel:
    Type: String
    Default: ""
    Description: Config Delivery Channel in your AWS Region. Leaving empty will try to create a new recorder. Required if you specify Config Recorder
  InstanceType:
    AllowedValues:
    - c5.4xlarge
    - c5d.4xlarge
    - c4.4xlarge
    - m4.4xlarge
    - m5.4xlarge
    - r5d.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m5.4xlarge
    Description: The EC2 instance type where Tableau Server will be installed.
    Type: String
  KeyPairName:
    AllowedPattern: ".+"
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  Password:
    Description: Tableau Services Manager (TSM) administrator password
    Type: String
    NoEcho: true
    AllowedPattern: "^(?=[a-zA-Z0-9#@$?!]{8,}$)(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9]).*"
    MinLength: '8'
  PublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public subnets in your VPC.
  PrivateSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Private subnets in your VPC.
  VpcCidr:
    Type: String
    Description: VPC CIDR Block.
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-tableau-server-healthcare/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  QSTagKey:
    Type: String
    Description: Tag key to identify resources from this Quick Start.
    Default: QuickStartID
  QSTagValue:
    Type: String
    Description: Tag value to identify resources from this Quick Start.
    Default: TableauServerHealthcare
  RegCity:
    Description: City
    MinLength: 1
    Type: String
  RegCompany:
    Description: Company
    MinLength: 1
    Type: String
  RegCountry:
    Description: Country
    MinLength: 1
    Type: String
  RegDepartment:
    Description: Department
    MinLength: 1
    Type: String
  RegEmail:
    Description: Email
    MinLength: 1
    Type: String
  RegFirstName:
    Description: First Name
    MinLength: 1
    Type: String
  RegIndustry:
    Description: Industry
    MinLength: 1
    Type: String
  RegLastName:
    Description: Last Name
    MinLength: 1
    Type: String
  RegPhone:
    Description: Phone
    MinLength: 1
    Type: String
  RegState:
    Description: State
    MinLength: 1
    Type: String
  RegTitle:
    Description: Title
    MinLength: 1
    Type: String
  RegZip:
    Description: ZIP/Postal Code
    MinLength: 1
    Type: String
  SourceCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: IP address/range to allow access from
    Type: String
  SSLCertificateARN:
    Type: String
    Default: ""
    Description: The Amazon Resource Name for the existing SSL cert you wish to use; empty for none
  TableauServerAdminPassword:
    Description: The password of the initial administrator for Tableau Server
    MinLength: 1
    NoEcho: true
    Type: String
  TableauServerAdminUser:
    Description: The name of the initial administrator for Tableau Server
    MinLength: 1
    Type: String
  TableauServerLicenseKey:
    Description: License Key
    Type: String
  Username:
    Description: Tableau Services Manager (TSM) administrator username (cannot be
      Administrator)
    Type: String
    AllowedPattern: "[A-Za-z0-9]+"
    MaxLength: '30'
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Amazon VPC ID

Rules:
  AcceptEULARule:
    Assertions:
    - Assert:
        !Equals ['Yes', !Ref AcceptEULA]
      AssertDescription: 'User must agree to Tableau Software EULA which can be viewed at the link: https://www.tableau.com/eula'

Mappings:
  AWSAMIRegionMap:
    AMI:
      CENTOS7HVM: CentOS Linux 7 x86_64 HVM 1805_01
      US1604HVM: Ubuntu 16.04 LTS HVM 20180912
      WS2012R2: Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.02.13
      ALINUX2: Amazon-Linux-2 LTS amzn2-ami-hvm-2.0.20180924-x86_64-gp2 
    ap-northeast-1:
      CENTOS7HVM: ami-045f38c93733dd48d
      US1604HVM: ami-03344c819e1ac354d
      WS2012R2: ami-0eee9047b95b1f74c
      ALINUX2: ami-06962fe7164c1fe7b
    ap-northeast-2:
      CENTOS7HVM: ami-06cf2a72dadf92410
      US1604HVM: ami-0c5a717974f63b04c
      WS2012R2: ami-03e603f10c77a5463
      ALINUX2: ami-02e495c61af26da99
    ap-south-1:
      CENTOS7HVM: ami-02e60be79e78fef21
      US1604HVM: ami-0c28d7c6dd94fb3a7
      WS2012R2: ami-0ed889b4a59795a32
      ALINUX2: ami-0b173ae0d9e71699a
    ap-southeast-1:
      CENTOS7HVM: ami-0b4dd9d65556cac22
      US1604HVM: ami-0ca13b3dabeb6c66d
      WS2012R2: ami-0331be4a84b3b2e75
      ALINUX2: ami-0f67499750e64577a
    ap-southeast-2:
      CENTOS7HVM: ami-08bd00d7713a39e7d
      US1604HVM: ami-02d7e25c1cfdd5695
      WS2012R2: ami-087682590b598bde5
      ALINUX2: ami-0e2b2114bf2fac7d8
    ca-central-1:
      CENTOS7HVM: ami-033e6106180a626d0
      US1604HVM: ami-0f06e521718460abf
      WS2012R2: ami-05b0f7544383bc098
      ALINUX2: ami-0c612fea430136cb0
    eu-central-1:
      CENTOS7HVM: ami-04cf43aca3e6f3de3
      US1604HVM: ami-03d8059563982d7b0
      WS2012R2: ami-02bafaa0e5f273fe6
      ALINUX2: ami-0e82b8b6afa30f2cd
    eu-west-1:
      CENTOS7HVM: ami-0ff760d16d9497662
      US1604HVM: ami-0f630a3f40b1eb0b8
      WS2012R2: ami-0c12af89247c70572
      ALINUX2: ami-0eafb5ee12a2cbffc
    eu-west-2:
      CENTOS7HVM: ami-0eab3a90fc693af19
      US1604HVM: ami-0a590332f9f499197
      WS2012R2: ami-040d07b284d8ded6b
      ALINUX2: ami-0135b45434a538069
    eu-west-3:
      CENTOS7HVM: ami-0e1ab783dc9489f34
      US1604HVM: ami-051ebe9615b416c15
      WS2012R2: ami-098e42db816ef64a8
      ALINUX2: ami-07e5d89c9e173f360
    sa-east-1:
      CENTOS7HVM: ami-0b8d86d4bf91850af
      US1604HVM: ami-0a16d0952a2a7b0ce
      WS2012R2: ami-0b3e238c9181e2d52
      ALINUX2: ami-0e4c9b46b89ddd90c
    us-east-1:
      CENTOS7HVM: ami-9887c6e7
      US1604HVM: ami-08bc77a2c7eb2b1da
      WS2012R2: ami-0b7fbf81b6d5e4ac5
      ALINUX2: ami-0e6d2e8684d4ccb3e
    us-east-2:
      CENTOS7HVM: ami-0f2b4fc905b0bd1f1
      US1604HVM: ami-08cec7c429219e339
      WS2012R2: ami-002c8e8f81577a96c
      ALINUX2: ami-0785b10e84f9dbd4f
    us-west-1:
      CENTOS7HVM: ami-074e2d6769f445be5
      US1604HVM: ami-094f0176b0d009d9f
      WS2012R2: ami-073e71ca7a28f7de4
      ALINUX2: ami-01eb1709d6ad69035
    us-west-2:
      CENTOS7HVM: ami-01ed306a12b7d1c96
      US1604HVM: ami-02d0ea44ae3fe9561
      WS2012R2: ami-07872c9dbb86b69ed
      ALINUX2: ami-0fcd5791ba781e98f
  AWSAMINameMap:
    CentOS-7-HVM:
      Code: CENTOS7HVM
    Ubuntu-Server-16.04-LTS-HVM:
      Code: US1604HVM
    Windows-Server-2012-R2: 
      Code: WS2012R2
    Amazon-Linux-2:
      Code: ALINUX2

Conditions:
  IsWindows: !Equals [ !Ref AMIOS, Windows-Server-2012-R2 ]
  IsLinux: !Not [ Condition: IsWindows ]
  IsUbuntu: !Equals [ !Ref AMIOS,  Ubuntu-Server-16.04-LTS-HVM ]
  IsCentosOrAmazonLinux: !Or [ !Equals [ !Ref AMIOS,  CentOS-7-HVM ], !Equals [ !Ref AMIOS, Amazon-Linux-2 ] ]
  NoSSLCertificate: !Equals [ '', !Ref SSLCertificateARN ]

Resources:
  # Create a log bucket
  LogStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/logging.yaml
      Parameters:
        ConfigRecorderName: !Ref ConfigRecorder
        ConfigDeliveryChannelName: !Ref ConfigDeliveryChannel
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSTagKey: !Ref QSTagKey
        QSTagValue: !Sub ${QSTagValue}-${AWS::StackName}

  # Create the ELB
  ElbStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LogStack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/encrypted-elb.yaml
      Parameters:
        AWSHostedZoneID: !Ref AWSHostedZoneID
        AWSPublicFQDN: !Ref AWSPublicFQDN
        LogBucket: !GetAtt LogStack.Outputs.LogBucket
        PublicSubnetIds: !Join [ ',', !Ref PublicSubnetIds ]
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSTagKey: !Ref QSTagKey
        QSTagValue: !Sub ${QSTagValue}-${AWS::StackName}
        SourceCIDR: !Ref SourceCIDR
        SSLCertificateARN: !Ref SSLCertificateARN
        VpcCidr: !Ref VpcCidr
        VpcId: !Ref VpcId

  # Encrypt the AMI root volume
  EncryptAmiStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - ElbStack
    - LogStack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/encrypt-ami.yaml
      Parameters:
        AmiId: !FindInMap [ AWSAMIRegionMap , !Ref "AWS::Region", !FindInMap [ AWSAMINameMap, !Ref AMIOS, Code ] ]
        AmiRegion: !Ref "AWS::Region"
        SubnetId: !Select [ 0, !Ref PrivateSubnetIds ]
        QSTagKey: !Ref QSTagKey
        QSTagValue: !Sub ${QSTagValue}-${AWS::StackName}

  # Configure Instance Security Group
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH/RDP access and HTTPS from the load balancer only
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !If [ IsWindows, 3389, 22 ]
        ToPort: !If [ IsWindows, 3389, 22 ]
        SourceSecurityGroupId: !Ref BastionSecurityGroup
      - IpProtocol: tcp
        FromPort: 8850
        ToPort: 8850
        SourceSecurityGroupId: !GetAtt ElbStack.Outputs.ElbSecurityGroup
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: !GetAtt ElbStack.Outputs.ElbSecurityGroup
      Tags:
      - Key: !Ref QSTagKey
        Value: !Sub ${QSTagValue}-${AWS::StackName}
      VpcId: !Ref VpcId

  TableauServerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: CreateTags
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - ec2:Describe*
            - ec2:CreateTags
            Resource: "*"
  TableauServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref TableauServerInstanceRole

  TableauServerWindows:
    Type: AWS::CloudFormation::Stack
    Condition: IsWindows
    DependsOn: 
    - EncryptAmiStack
    - ElbStack
    - TableauServerInstanceProfile
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/tableau-server-windows.yaml
      Parameters:
        AcceptEULA: !Ref AcceptEULA
        ElbTargetGroups: !GetAtt ElbStack.Outputs.ElbTargetGroupHTTPS
        ImageId: !GetAtt EncryptAmiStack.Outputs.EncryptedAmiId
        InstanceSecurityGroup: !Ref InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        TableauServerInstanceProfile: !Ref TableauServerInstanceProfile
        KeyPairName: !Ref KeyPairName
        Password: !Ref Password
        PrivateSubnetIds: !Join [',', !Ref PrivateSubnetIds]
        RegCity: !Ref RegCity
        RegCompany: !Ref RegCompany
        RegCountry: !Ref RegCountry
        RegDepartment: !Ref RegDepartment
        RegEmail: !Ref RegEmail
        RegFirstName: !Ref RegFirstName
        RegIndustry: !Ref RegIndustry
        RegLastName: !Ref RegLastName
        RegPhone: !Ref RegPhone
        RegState: !Ref RegState
        RegTitle: !Ref RegTitle
        RegZip: !Ref RegZip
        QSTagKey: !Ref QSTagKey
        QSTagValue: !Sub ${QSTagValue}-${AWS::StackName}
        TableauServerAdminUser: !Ref TableauServerAdminUser
        TableauServerAdminPassword: !Ref TableauServerAdminPassword
        TableauServerLicenseKey: !Ref TableauServerLicenseKey
        Username: !Ref Username

  TableauServerUbuntu:
    Type: AWS::CloudFormation::Stack
    Condition: IsUbuntu
    DependsOn: 
    - EncryptAmiStack
    - ElbStack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/tableau-server-ubuntu.yaml
      Parameters:
        AcceptEULA: !Ref AcceptEULA
        ElbTargetGroups: !GetAtt ElbStack.Outputs.ElbTargetGroupHTTPS
        ImageId: !GetAtt EncryptAmiStack.Outputs.EncryptedAmiId
        InstanceSecurityGroup: !Ref InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        TableauServerInstanceProfile: !Ref TableauServerInstanceProfile
        KeyPairName: !Ref KeyPairName
        Password: !Ref Password
        PrivateSubnetIds: !Join [',', !Ref PrivateSubnetIds ]
        RegCity: !Ref RegCity
        RegCompany: !Ref RegCompany
        RegCountry: !Ref RegCountry
        RegDepartment: !Ref RegDepartment
        RegEmail: !Ref RegEmail
        RegFirstName: !Ref RegFirstName
        RegIndustry: !Ref RegIndustry
        RegLastName: !Ref RegLastName
        RegPhone: !Ref RegPhone
        RegState: !Ref RegState
        RegTitle: !Ref RegTitle
        RegZip: !Ref RegZip
        QSTagKey: !Ref QSTagKey
        QSTagValue: !Sub ${QSTagValue}-${AWS::StackName}
        TableauServerAdminUser: !Ref TableauServerAdminUser
        TableauServerAdminPassword: !Ref TableauServerAdminPassword
        TableauServerLicenseKey: !Ref TableauServerLicenseKey
        Username: !Ref Username

  TableauServerCentosAmazonLinux:
    Type: AWS::CloudFormation::Stack
    Condition: IsCentosOrAmazonLinux
    DependsOn: 
    - EncryptAmiStack
    - ElbStack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/tableau-server-centos-amazonlinux.yaml
      Parameters:
        AMIOS: !Ref AMIOS
        AcceptEULA: !Ref AcceptEULA
        ElbTargetGroups: !GetAtt ElbStack.Outputs.ElbTargetGroupHTTPS
        ImageId: !GetAtt EncryptAmiStack.Outputs.EncryptedAmiId
        InstanceSecurityGroup: !Ref InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        TableauServerInstanceProfile: !Ref TableauServerInstanceProfile
        KeyPairName: !Ref KeyPairName
        Password: !Ref Password
        PrivateSubnetIds: !Join [',', !Ref PrivateSubnetIds ]
        RegCity: !Ref RegCity
        RegCompany: !Ref RegCompany
        RegCountry: !Ref RegCountry
        RegDepartment: !Ref RegDepartment
        RegEmail: !Ref RegEmail
        RegFirstName: !Ref RegFirstName
        RegIndustry: !Ref RegIndustry
        RegLastName: !Ref RegLastName
        RegPhone: !Ref RegPhone
        RegState: !Ref RegState
        RegTitle: !Ref RegTitle
        RegZip: !Ref RegZip
        QSTagKey: !Ref QSTagKey
        QSTagValue: !Sub ${QSTagValue}-${AWS::StackName}
        TableauServerAdminUser: !Ref TableauServerAdminUser
        TableauServerAdminPassword: !Ref TableauServerAdminPassword
        TableauServerLicenseKey: !Ref TableauServerLicenseKey
        Username: !Ref Username

Outputs:
  LoadBalancerDNSName:
    Value: !GetAtt ElbStack.Outputs.ElbDns
    Description: DNS Name for the load balancer
  RecordSet: 
    Value: !GetAtt ElbStack.Outputs.RecordSet
    Description: Domain Name of the Record Set
  TableauServerURL:
    Description: Public DNS name to reach cluster
    Value: !Sub https://${AWSPublicFQDN}
  TSMUrl:
    Description: URL to access TSM GUI. Accessible via Bastion Host
    Value: !Sub https://${AWSPublicFQDN}:8850